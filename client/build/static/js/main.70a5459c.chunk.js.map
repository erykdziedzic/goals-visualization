{"version":3,"sources":["logo.png","ProgressBar.jsx","Home.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","ProgressBar","percentage","this","props","title","value","goal","currentMonth","Date","getMonth","currentGoal","undefined","Math","round","status","getStatus","className","style","width","React","PureComponent","defaultProps","getToken","login","key","fetch","method","headers","body","JSON","stringify","then","res","json","getSheet","range","token","catch","e","console","log","current","secondCol","getPercentage","getCell","table","y","x","Number","replace","Home","state","income","marketingSales","customers","organizationalCapacity","prompt","setState","alert","location","reload","getRowSum","row","startCol","rowElements","Array","from","splice","sum","forEach","val","display","flexDirection","justifyContent","src","logo","alt","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70a5459c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.58cafc63.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Home.css';\n\nconst getStatus = (value, goal) => {\n  if (value / goal >= 1) return 'achieved';\n  if (value / goal > 0.5) return 'almost';\n  return 'failed';\n};\n\nclass ProgressBar extends React.PureComponent {\n  render() {\n    const { title, value, goal } = this.props;\n\n    const currentMonth = new Date().getMonth() + 1;\n    const currentGoal = goal ? goal * (currentMonth / 12) : undefined;\n    let percentage;\n    if (value && currentGoal) {\n      percentage = `${Math.round(((value * 100) / currentGoal) * 100) / 100}%`;\n    }\n    const status = getStatus(value, currentGoal);\n    return (\n      <div className=\"progressBar\">\n        <div style={{ width: percentage || '0%' }} className={`progressBarValue ${status}`} />\n        <div className=\"progressBarValueText\">\n          {`${title} | ${value !== undefined ? value : '?'} - ${percentage || '?'} z ${currentGoal || '?'}`}\n        </div>\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.number,\n  goal: PropTypes.number,\n};\n\nProgressBar.defaultProps = {\n  value: undefined,\n  goal: undefined,\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport './Home.css';\nimport logo from './logo.png';\nimport ProgressBar from './ProgressBar';\n\nconst getToken = (login, key) => fetch('/api/auth',\n  { method: 'post', headers: { 'Content-type': 'application/json' }, body: JSON.stringify({ login, key }) }).then((res) => {\n  if (res.status === 200) return res.json();\n  return undefined;\n});\n\nconst getSheet = (range, token) => fetch('/api/data',\n  { method: 'post', headers: { 'Content-type': 'application/json' }, body: JSON.stringify({ range, token }) })\n  .then((res) => res.json())\n  .catch((e) => console.log(e));\n\n\nconst getStatus = (current, goal, secondCol = false) => {\n  if (current / goal >= 1) return 'achieved';\n  if (current / goal > 0.5 && !secondCol) return 'almost';\n  return 'failed';\n};\n\nconst getPercentage = (current, goal) => (current && goal ? `${Math.round(((current * 100) / goal) * 100) / 100}%` : undefined);\n\nconst getCell = (table, y, x) => {\n  if (table && table[y][x]) return Number(table[y][x].replace('%', '').replace(',', '.'));\n  return undefined;\n};\n\nexport default class Home extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      income: undefined,\n      marketingSales: undefined,\n      customers: undefined,\n      organizationalCapacity: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const login = prompt('Enter login: '); // eslint-disable-line no-alert\n    const key = prompt('Enter password: '); // eslint-disable-line no-alert\n    const token = await getToken(login, key);\n\n    if (token) {\n      const income = await getSheet('Cele 2020!A1:Q5', token);\n      const marketingSales = await getSheet('Cele 2020!A8:Q19', token);\n      const customers = await getSheet('Cele 2020!A22:D30', token);\n      const organizationalCapacity = await getSheet('Cele 2020!A33:D38', token);\n      this.setState({\n        income, marketingSales, customers, organizationalCapacity,\n      });\n    } else {\n      alert('Unauthorized!'); // eslint-disable-line no-alert\n      location.reload(); // eslint-disable-line no-restricted-globals\n    }\n  }\n\n  render() {\n    const {\n      income,\n      marketingSales,\n      customers,\n      organizationalCapacity,\n    } = this.state;\n\n    const currentMonth = new Date().getMonth();\n    const getRowSum = (row, startCol) => {\n      if (marketingSales) {\n        const rowElements = Array.from(marketingSales[row]);\n        rowElements.splice(0, startCol - 1);\n        let sum = 0;\n        rowElements.forEach((val) => { sum += Number(val.replace(',', '.')); });\n        return sum;\n      }\n      return undefined;\n    };\n\n    return (\n      <div className=\"Home\">\n        <div className=\"Content\">\n          <div style={{\n            display: 'flex', flexDirection: 'column', justifyContent: 'center',\n          }}\n          >\n            <div className=\"logoContainer\">\n              <img src={logo} alt=\"Logo\" />\n            </div>\n            <div className=\"progressBar YearlyIncome\">\n              <div style={{ width: getPercentage(getCell(income, 1, 3), getCell(income, 1, 1)) || '0%' }} className={`progressBarValue ${getStatus(getCell(income, 1, 3), getCell(income, 1, 1))}`} />\n              <div className=\"progressBarValueText yearlyIncomeValueText\">\n                {`Yearly income | ${getCell(income, 1, 3) || '?'} - ${getPercentage(getCell(income, 1, 3), getCell(income, 1, 1)) || '?'} z ${getCell(income, 1, 1) || '?'}`}\n              </div>\n            </div>\n            <div className=\"progressBar YearlyIncome MonthlyIncome\">\n              <div style={{ width: getPercentage(getCell(income, 1, 5 + currentMonth), getCell(income, 1, 4)) || '0%' }} className={`progressBarValue ${getStatus(getCell(income, 1, 5 + currentMonth), getCell(income, 1, 4))}`} />\n              <div className=\"progressBarValueText yearlyIncomeValueText\">\n                {`Monthly income (${income ? income[0][5 + currentMonth] : '?'}) | ${getCell(income, 1, 5 + currentMonth) || '?'} - ${getPercentage(getCell(income, 1, 5 + currentMonth), getCell(income, 1, 4)) || '?'} z ${getCell(income, 1, 4) || '?'}`}\n              </div>\n            </div>\n          </div>\n          <div className=\"DataColumns\">\n            <div className=\"dataColumn\">\n              <div className={`status ${getStatus(getCell(marketingSales, 3, 5 + currentMonth), getCell(marketingSales, 3, 4))}`}>Sprints</div>\n              <div className={`status ${getStatus(getCell(income, 2, 3), getCell(income, 2, 1))}`}>Costs</div>\n              <div className={`status ${getStatus(getCell(income, 3, 3), getCell(income, 3, 1))}`}>Space-income</div>\n              <div className={`status ${getStatus(getCell(income, 4, 3), getCell(income, 4, 1))}`}>VP-income</div>\n            </div>\n            <div className=\"dataColumn\">\n              <div className={`status ${getStatus(getCell(customers, 0, 3), getCell(customers, 0, 1), true)}`}>LTV (Life Time Value)</div>\n              <div className={`status ${getStatus(getCell(customers, 1, 3), getCell(customers, 1, 1), true)}`}>Recommendations</div>\n              <div className={`status ${getStatus(getCell(customers, 2, 3), getCell(customers, 2, 1), true)}`}>Testimonials</div>\n              <div className={`status ${getStatus(getCell(customers, 3, 3), getCell(customers, 3, 1), true)}`}>Come backs</div>\n              <div className={`status ${getStatus(getCell(customers, 4, 3), getCell(customers, 4, 1), true)}`}>Case studies</div>\n              <div className={`status ${getStatus(getCell(customers, 7, 3), getCell(customers, 7, 1), true)}`}>#Sztosowość</div>\n            </div>\n            <div className=\"dataColumn\">\n              <div className={`status ${getStatus(getCell(marketingSales, 0, 3), getCell(marketingSales, 0, 1))}`}>Leads</div>\n              <div className={`status ${getStatus(getCell(marketingSales, 1, 3), getCell(marketingSales, 1, 1))}`}>Sales efficiency</div>\n              <div className={`status ${getStatus(getCell(marketingSales, 2, 3), getCell(marketingSales, 2, 1))}`}>Outbound leads</div>\n              <div className={`status ${getStatus(getCell(marketingSales, 3, 3), getCell(marketingSales, 3, 1))}`}>Sold sprints</div>\n              <div className={`status ${getStatus(getRowSum(4, 6), getCell(marketingSales, 4, 1))}`}>Case studies</div>\n              <ProgressBar title=\"Blog posts\" value={getRowSum(5, 6)} goal={getCell(marketingSales, 5, 1)} />\n            </div>\n            <div className=\"dataColumn\">\n              <ProgressBar title=\"Dribble\" value={getRowSum(6, 6)} goal={getCell(marketingSales, 6, 1)} />\n              <ProgressBar title=\"Conferences\" value={getRowSum(7, 6)} goal={getCell(marketingSales, 7, 1)} />\n              <ProgressBar title=\"External media\" value={getRowSum(8, 6)} goal={getCell(marketingSales, 8, 1)} />\n              <ProgressBar title=\"Personal branding\" value={getRowSum(9, 6)} goal={getCell(marketingSales, 9, 1)} />\n              <ProgressBar title=\"Events by PP\" value={getRowSum(10, 6)} goal={getCell(marketingSales, 10, 1)} />\n              <ProgressBar title=\"FB / Linkedin\" value={getRowSum(11, 6)} goal={getCell(marketingSales, 11, 1)} />\n            </div>\n            <div className=\"dataColumn\">\n              <ProgressBar title=\"New Team members\" value={getCell(organizationalCapacity, 0, 3) - 11} goal={getCell(organizationalCapacity, 0, 1) - getCell(organizationalCapacity, 0, 3)} />\n              <ProgressBar title=\"Training\" value={getCell(organizationalCapacity, 1, 3)} goal={getCell(organizationalCapacity, 1, 1)} />\n              <ProgressBar title=\"UX training\" value={getCell(organizationalCapacity, 2, 3)} goal={getCell(organizationalCapacity, 2, 1)} />\n              <ProgressBar title=\"Strategy training\" value={getCell(organizationalCapacity, 3, 3)} goal={getCell(organizationalCapacity, 3, 1)} />\n              <ProgressBar title=\"Breakfasts with Beata\" value={getCell(organizationalCapacity, 4, 3)} goal={getCell(organizationalCapacity, 4, 1)} />\n              <ProgressBar title=\"Team knowledge sharing\" value={getCell(organizationalCapacity, 5, 3)} goal={getCell(organizationalCapacity, 5, 1)} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home';\n\nclass App extends React.PureComponent {\n  componentDidMount() { fetch('/'); }\n\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={Home} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}